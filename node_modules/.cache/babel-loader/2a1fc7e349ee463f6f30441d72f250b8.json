{"ast":null,"code":"var _jsxFileName = \"/home/sujoy/react-apps/game-of-life/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Box extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectBox = () => {\n      this.props.selectBox(this.props.rows);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.boxClass,\n      id: this.props.id,\n      onClick: this.selectBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 14;\n    let rowsArr = [];\n    let boxClass = \"\";\n\n    for (let i = 0; i < this.props.rows; i++) {\n      for (let j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push( /*#__PURE__*/React.createElement(Box, {\n          boxClass: boxClass,\n          key: boxId,\n          boxId: boxId,\n          row: i,\n          col: j,\n          selectBox: this.props.selectBox,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid\",\n      style: {\n        width: width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, {\n      rowsArr\n    });\n  }\n\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n    this.state = {\n      generation: 0,\n      //this is gonna create a 2d array of 30x50 initialized with false\n      gridFull: Array(this.rows).fill().map(() => Array(this.cols).fill(false))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"The Game of Life\"), /*#__PURE__*/React.createElement(Grid, {\n      gridFull: this.state.gridFull,\n      rows: this.rows,\n      cols: this.cols,\n      selectBox: this.selectBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Generation: \", this.state.generation));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Main, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }\n})), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/sujoy/react-apps/game-of-life/src/index.js"],"names":["React","ReactDOM","Box","Component","selectBox","props","rows","render","boxClass","id","Grid","width","cols","rowsArr","i","j","boxId","gridFull","push","Main","constructor","speed","state","generation","Array","fill","map","document","getElementById"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nclass Box extends React.Component {\n  selectBox = () => {\n    this.props.selectBox(this.props.rows)\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.boxClass}\n        id={this.props.id}\n        onClick={this.selectBox}\n      />\n    );\n  }\n}\n\nclass Grid extends React.Component {\n  render() {\n    const width = this.props.cols * 14;\n    let rowsArr = [];\n\n    let boxClass = \"\";\n    for (let i = 0; i < this.props.rows; i++) {\n      for (let j = 0; j < this.props.cols; j++) {\n        let boxId = i + \"_\" + j;\n        boxClass = this.props.gridFull[i][j] ? \"box on\" : \"box off\";\n        rowsArr.push(\n          <Box\n            boxClass={boxClass}\n            key={boxId}\n            boxId={boxId}\n            row={i}\n            col={j}\n            selectBox={this.props.selectBox}\n          />\n        );\n      }\n    }\n\n    return (\n      <div className=\"grid\" style={{ width: width }}>\n        {{ rowsArr }}\n      </div>\n    );\n  }\n}\n\nclass Main extends React.Component {\n  constructor() {\n    super();\n    this.speed = 100;\n    this.rows = 30;\n    this.cols = 50;\n\n    this.state = {\n      generation: 0,\n      //this is gonna create a 2d array of 30x50 initialized with false\n      gridFull: Array(this.rows)\n        .fill()\n        .map(() => Array(this.cols).fill(false)),\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>The Game of Life</h1>\n        <Grid\n          gridFull={this.state.gridFull}\n          rows={this.rows}\n          cols={this.cols}\n          selectBox={this.selectBox}\n        />\n        <h2>Generation: {this.state.generation}</h2>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"]},"metadata":{},"sourceType":"module"}